services:
  mongo:
    image: mongo:${MONGO_VERSION:-latest}
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - db-network
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: lti-app
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lti-app.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.lti-app.entrypoints=websecure"
      - "traefik.http.routers.lti-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.lti-app.loadbalancer.server.port=3000"
    networks:
      - db-network

  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: unless-stopped
    environment:
      - TRAEFIK_ACME_EMAIL=${TRAEFIK_ACME_EMAIL}
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${APP_DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
      - "traefik.http.routers.dashboard.service=api@internal"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - db-network


volumes:
  mongo_data:
  traefik_letsencrypt:

networks:
  db-network:
    driver: bridge
